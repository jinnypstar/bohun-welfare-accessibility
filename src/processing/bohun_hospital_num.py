# -*- coding: utf-8 -*-
"""bohun_hospital_num.ipynb의 사본의 사본

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zX7izsYClEz7U10giASj-UjUmgUWaD4L

#보훈병원 및 보훈 위탁병원 데이터 전처리
####광역시도별 시군구별 보훈병원 현황을 확인하기 위해 전처리를 진행합니다.
- 광역시도별 시군구별 보훈병원 및 보훈 위탁병원 수
- 광역시도별 시군구별 보훈병원 및 보훈 위탁병원의 평균 진료과 수
"""

import pandas as pd

# 파일 불러오기
file_path = "bohun_hospital_all.csv"
df = pd.read_csv(file_path)

# 결측치 및 type 확인
df.info()

"""해당 데이터는 보훈 위탁병원 정보만 담긴 데이터에 보훈공단 보훈병원을 정보를 추가한 데이터입니다.

추가할 때 기준일, 연번, 위탁병원명, 종별, 진료과수, 광역시도명, 시군구명, 상세주소, 전화번호 컬럼만 입력하여 나머지 컬럼인 병상수, 위도, 경도 컬럼에 6건의 null값이 존재합니다.
"""

# 광역시도별 시군구별 계산을 위한 컬럼 생성
df['광역시도명+시군구명'] = df['광역시도명'] + ' ' + df['시군구명']

# 병원 수 계산
region_hospital_counts = df.groupby('광역시도명+시군구명').size().reset_index(name='병원수')

# 진료과수 평균 계산
df['진료과수'] = pd.to_numeric(df['진료과수'], errors='coerce')
avg_dept_by_region = df.groupby('광역시도명+시군구명')['진료과수'].mean().reset_index(name='평균진료과수')

# 병원 수와 진료과수 평균 데이터 병합
merged_df = pd.merge(region_hospital_counts, avg_dept_by_region, on='광역시도명+시군구명', how='inner')

# 광역시명, 시군구명 컬럼 다시 분리해서 붙이기
merged_df[['광역시도명', '시군구명']] = merged_df['광역시도명+시군구명'].str.split(' ', n=1, expand=True)

# 컬럼 정렬
merged_df = merged_df[['광역시도명', '시군구명', '병원수', '평균진료과수']]

# 확인
merged_df

"""평균 계산으로 인해 평균진료과수 컬럼의 값들이 소수점으로 입력되었습니다.
원활한 분석을 위해 소수 첫째 자리에서 반올림합니다.
"""

# 반올림 함수
from decimal import Decimal, ROUND_HALF_UP

def round_half_up(n):
    return int(Decimal(str(n)).quantize(Decimal('1'), rounding=ROUND_HALF_UP))

merged_df['평균진료과수'] = merged_df['평균진료과수'].apply(round_half_up)

merged_df

merged_df.to_excel('hospital_stats_by_region.xlsx', index=False)