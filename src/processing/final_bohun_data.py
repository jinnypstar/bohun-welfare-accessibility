# -*- coding: utf-8 -*-
"""final_bohun_data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wlkPTlFOgoMumwsnlCOE-miksQbHWqur
"""

import pandas as pd

df_personnel = pd.read_csv('bohun_elderly_hospital_personnel.csv') # 시군구별 보훈 대상자 수, 고령자 수(65세 이상), 위탁병원 이용자 수 및 보훈병원 유무
df_hospital_num = pd.read_csv('bohun_hospital_num.csv') # 시군구별 보훈 병원(보훈공단 소재 보훈 병원 및 위탁병원) 수 및 진료과 수
df_accessibility = pd.read_csv('bohun_accessibility.csv') # 시군구별 보훈병원 접근성

"""df_personnel과 df_hospital_num, df_accessibility의 시군구명이 맞지 않는 행들을 df_personnel을 기준으로 통일합니다."""

# ✅ 기준 시군구명 리스트 확보
valid_names = df_personnel['시군구명'].unique()

# ✅ 시군구명(광역시도) 형태로 변환하는 함수 정의
def convert_with_region(row):
    name = row['시군구명']
    region = row['광역시도명'] if '광역시도명' in row else row['지역명']  # 컬럼 이름에 따라 대응
    candidate = f"{name}({region.replace('특별자치도','').replace('특별시','').replace('광역시','').replace('도','').strip()})"
    return candidate if candidate in valid_names else name  # 없으면 원래 이름 유지

# ✅ 시군구명을 기준에 맞게 정제
df_hospital_num['시군구명'] = df_hospital_num.apply(convert_with_region, axis=1)
df_accessibility['시군구명'] = df_accessibility.apply(convert_with_region, axis=1)

# ✅ 병합
df_merged = df_personnel.merge(df_hospital_num, on='시군구명', how='left')\
                         .merge(df_accessibility, on='시군구명', how='left')

df_merged.to_csv('final_bohun_data.csv', index=False)
df_merged.to_excel('final_bohun_data.xlsx', index=False)